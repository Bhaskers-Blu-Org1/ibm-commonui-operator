// +build !ignore_autogenerated

//
// Copyright 2020 IBM Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIConfig":         schema_pkg_apis_operators_v1alpha1_CommonWebUIConfig(ref),
		"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIGlobalConfig":   schema_pkg_apis_operators_v1alpha1_CommonWebUIGlobalConfig(ref),
		"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUILegacyConfig":   schema_pkg_apis_operators_v1alpha1_CommonWebUILegacyConfig(ref),
		"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIService":        schema_pkg_apis_operators_v1alpha1_CommonWebUIService(ref),
		"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIServiceSpec":    schema_pkg_apis_operators_v1alpha1_CommonWebUIServiceSpec(ref),
		"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIServiceStatus":  schema_pkg_apis_operators_v1alpha1_CommonWebUIServiceStatus(ref),
		"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.LegacyHeaderService":       schema_pkg_apis_operators_v1alpha1_LegacyHeaderService(ref),
		"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.LegacyHeaderServiceSpec":   schema_pkg_apis_operators_v1alpha1_LegacyHeaderServiceSpec(ref),
		"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.LegacyHeaderServiceStatus": schema_pkg_apis_operators_v1alpha1_LegacyHeaderServiceStatus(ref),
	}
}

func schema_pkg_apis_operators_v1alpha1_CommonWebUIConfig(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "CommonWebUIConfig defines the desired state of CommonWebUIConfig",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"serviceName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"imageRegistry": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"imageTag": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"cpuLimits": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"cpuMemory": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"requestLimits": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"requestMemory": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"ingressPath": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
	}
}

func schema_pkg_apis_operators_v1alpha1_CommonWebUIGlobalConfig(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "CommonWebUIGlobalConfig defines the desired state of CommonWebUIGlobalConfig",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"pullSecret": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"cfcRouterUrl": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"IdentityProviderURL": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"authServiceUrl": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"CLOUDPAK_VERSION": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"default_admin_user": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"router_https_port": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
					"cluster_name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"session_polling_interval": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"integer"},
							Format: "int32",
						},
					},
				},
				Required: []string{"IdentityProviderURL"},
			},
		},
	}
}

func schema_pkg_apis_operators_v1alpha1_CommonWebUILegacyConfig(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "CommonWebUILegacyConfig defines the desired state of CommonWebUILegacyConfig",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"serviceName": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"imageRegistry": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"imageTag": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"cpuLimits": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"cpuMemory": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"requestLimits": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"requestMemory": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"legacyLogoPath": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"legacyLogoWidth": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"legacyLogoHeight": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"legacySupportUrl": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"legacyDocUrl": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"legacyLogoAltText": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"ingressPath": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
	}
}

func schema_pkg_apis_operators_v1alpha1_CommonWebUIService(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "CommonWebUIService is the Schema for the commonwebuiservices API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIServiceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIServiceStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIServiceSpec", "github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIServiceStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_operators_v1alpha1_CommonWebUIServiceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "CommonWebUIServiceSpec defines the desired state of CommonWebUIServiceSpec",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"uiconfig": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIConfig"),
						},
					},
					"globalConfig": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIGlobalConfig"),
						},
					},
					"operatorVersion": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIConfig", "github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIGlobalConfig"},
	}
}

func schema_pkg_apis_operators_v1alpha1_CommonWebUIServiceStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "CommonWebUIServiceStatus defines the observed state of CommonWebUIService",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"nodes": {
						SchemaProps: spec.SchemaProps{
							Description: "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
							Type:        []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
				},
				Required: []string{"nodes"},
			},
		},
	}
}

func schema_pkg_apis_operators_v1alpha1_LegacyHeaderService(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "LegacyHeaderService is the Schema for the legacyheaderservices API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.LegacyHeaderServiceSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.LegacyHeaderServiceStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.LegacyHeaderServiceSpec", "github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.LegacyHeaderServiceStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_operators_v1alpha1_LegacyHeaderServiceSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "LegacyHeaderServiceSpec defines the desired state of LegacyHeaderService",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"legacyuiconfig": {
						SchemaProps: spec.SchemaProps{
							Description: "INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
							Ref:         ref("github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUILegacyConfig"),
						},
					},
					"globalConfig": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIGlobalConfig"),
						},
					},
					"operatorVersion": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUIGlobalConfig", "github.com/ibm/ibm-commonui-operator/pkg/apis/operators/v1alpha1.CommonWebUILegacyConfig"},
	}
}

func schema_pkg_apis_operators_v1alpha1_LegacyHeaderServiceStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "LegacyHeaderServiceStatus defines the observed state of LegacyHeaderService",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"nodes": {
						SchemaProps: spec.SchemaProps{
							Description: "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
							Type:        []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
				},
				Required: []string{"nodes"},
			},
		},
	}
}
